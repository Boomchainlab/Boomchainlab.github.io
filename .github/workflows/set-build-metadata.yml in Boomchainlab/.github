name: Set Build Metadata with Changelog

on:
  workflow_call:
    outputs:
      build_timestamp:
        value: ${{ jobs.set-metadata.outputs.build_timestamp }}
      short_sha:
        value: ${{ jobs.set-metadata.outputs.short_sha }}
      branch_name:
        value: ${{ jobs.set-metadata.outputs.branch_name }}

jobs:
  set-metadata:
    runs-on: ubuntu-latest
    outputs:
      build_timestamp: ${{ steps.export.outputs.build_timestamp }}
      short_sha: ${{ steps.export.outputs.short_sha }}
      branch_name: ${{ steps.export.outputs.branch_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate build metadata
        id: export
        run: |
          TIMESTAMP=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          SHORT_SHA=$(git rev-parse --short HEAD)
          BRANCH=${GITHUB_REF##*/}
          echo "build_timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH" >> $GITHUB_OUTPUT

          echo "BUILD_TIMESTAMP=$TIMESTAMP" > metadata.env
          echo "SHORT_SHA=$SHORT_SHA" >> metadata.env
          echo "BRANCH_NAME=$BRANCH" >> metadata.env

      - name: Generate changelog from last tag (if exists)
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "no-tag")
          echo "Generating changelog since $LATEST_TAG..."
          if [ "$LATEST_TAG" != "no-tag" ]; then
            git log "$LATEST_TAG"..HEAD --pretty=format:"- %s (%an)" > CHANGELOG.md
          else
            git log --pretty=format:"- %s (%an)" > CHANGELOG.md
          fi

      - name: Upload metadata and changelog
        uses: actions/upload-artifact@v4
        with:
          name: build-assets
          path: |
            metadata.env
            CHANGELOG.md
